import{p as y,h as i,ab as m}from"./framework.CCndWvNN.js";function K(c={}){const{rowKey:r="id",defaultSelected:f=[],maintainDataOrder:o=!0}=c,t=y(f),l=i(()=>{const e=m(c.data)?c.data.value:c.data;return Array.isArray(e)?e:[]}),a=e=>typeof r=="function"?r(e):typeof e=="object"&&e?e[r]:e,v=i(()=>l.value.length?l.value.every(e=>t.value.includes(a(e))):!1),S=i(()=>l.value.length?l.value.some(n=>t.value.includes(a(n)))&&!v.value:!1),d=e=>t.value.includes(a(e));return{selectedKeys:t,isAllSelected:v,isPartialSelected:S,toggleSelect:(e,n=!d(e))=>{const u=a(e);if(n){if(!t.value.includes(u))if(o){const s=new Set([...t.value,u]);t.value=Array.from(new Set(l.value.map(a).filter(g=>s.has(g))))}else t.value=[...t.value,u]}else t.value=t.value.filter(s=>s!==u)},toggleSelectAll:(e=!v.value)=>{if(e)if(o)t.value=[...new Set(l.value.map(a))];else{const n=new Set(t.value),u=l.value.map(a).filter(s=>!n.has(s));t.value=[...t.value,...u]}else t.value=[]},isSelected:d}}export{K as useSelection};
