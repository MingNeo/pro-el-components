import{d as h,p,q as y,s as E,h as P,b as v,r,o as i,ai as R,B as c,w as m,a1 as k,aj as B,c as S,C as f,K as V,F as C,a as M,t as _}from"./framework.CCndWvNN.js";const j=h({name:"ProRadio",__name:"index",props:{service:{},optionNames:{default:()=>({label:"label",value:"value"})},options:{},viewMode:{type:Boolean},viewModeSeparator:{default:", "},modelValue:{},radioProps:{}},setup(w){const a=w,t=p(!1),s=p(a.options||[]);y(()=>a.options,e=>s.value=e||[]);async function b(e){if(a.service){t.value=!0;try{const o=await a.service(e);s.value=o}catch(o){console.warn(o)}t.value=!1}}E(()=>b());const u=P(()=>a.modelValue!==void 0?a.modelValue.map(e=>{var o;return((o=s.value.find(n=>n[a.optionNames.value]===e))==null?void 0:o[a.optionNames.label])||e}).join(a.viewModeSeparator):"-");return(e,o)=>{const n=f("ElRadio"),N=f("ElRadioGroup");return e.viewMode?r(e.$slots,"view",{key:1,content:u.value},()=>[M(_(u.value),1)]):(i(),v(N,{key:0,loading:t.value,"model-value":e.modelValue},R({default:m(()=>[r(e.$slots,"default",{},()=>[(i(!0),S(C,null,c(s.value,l=>(i(),v(n,V({key:l[e.optionNames.value],label:l[e.optionNames.label],value:l[e.optionNames.value],disabled:l[e.optionNames.disabled||"disabled"],ref_for:!0},a.radioProps),null,16,["label","value","disabled"]))),128))])]),_:2},[c(e.$slots,(l,d)=>({name:d,fn:m(g=>[r(e.$slots,d,k(B(g||{})))])}))]),1032,["loading","model-value"]))}}});export{j as _};
