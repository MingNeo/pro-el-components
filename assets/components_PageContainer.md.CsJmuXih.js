import{_ as i,C as d,c as n,o as l,j as a,G as r,a4 as o,a as s}from"./chunks/framework.C7SOrqHQ.js";const y=JSON.parse('{"title":"PageContainer组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/PageContainer.md","filePath":"components/PageContainer.md"}'),h={name:"components/PageContainer.md"};function p(k,t,c,g,E,b){const e=d("demo");return l(),n("div",null,[t[0]||(t[0]=a("h1",{id:"pagecontainer组件",tabindex:"-1"},[s("PageContainer组件 "),a("a",{class:"header-anchor",href:"#pagecontainer组件","aria-label":'Permalink to "PageContainer组件"'},"​")],-1)),t[1]||(t[1]=a("p",null,"基础页面容器。可用于列表页、详情页等多种页面",-1)),t[2]||(t[2]=a("h1",{id:"示例",tabindex:"-1"},[s("示例 "),a("a",{class:"header-anchor",href:"#示例","aria-label":'Permalink to "示例"'},"​")],-1)),r(e,{src:"@/components/PageContainer/demos/demo.vue"}),t[3]||(t[3]=o(`<h1 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h1><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">page-container</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;货币管理&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">page-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h1 id="api清单" tabindex="-1">API清单 <a class="header-anchor" href="#api清单" aria-label="Permalink to &quot;API清单&quot;">​</a></h1><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>string</td><td>-</td><td>可选</td><td>模态框标题</td></tr><tr><td>actions</td><td>any[]</td><td>-</td><td>可选</td><td>操作按钮列表，使用ButtonActions配置</td></tr><tr><td>loading</td><td>boolean</td><td>-</td><td>可选</td><td>页面loading</td></tr><tr><td>showHeader</td><td>boolean</td><td>-</td><td>可选</td><td>是否显示标题栏</td></tr><tr><td>showBack</td><td>boolean</td><td>-</td><td>可选</td><td>是否显示返回按钮</td></tr><tr><td>tabs</td><td>any[]</td><td>-</td><td>可选</td><td>是否显示tab</td></tr><tr><td>tabActiveKey</td><td>number</td><td>-</td><td>可选</td><td>当前选中tab</td></tr></tbody></table><h1 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h1><table tabindex="0"><thead><tr><th>插槽名</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>模态框标题</td></tr><tr><td>actions</td><td>操作按钮列表</td></tr></tbody></table>`,6))])}const u=i(h,[["render",p]]);export{y as __pageData,u as default};
